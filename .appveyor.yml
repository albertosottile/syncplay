environment:
  MINICONDA: "C:\\Miniconda"
  clone_folder: c:\projects\syncplay

image:
  - Visual Studio 2013

platform: x86

configuration: Release

init:
  - set PATH=C:\Miniconda;C:\Miniconda\Scripts;%PATH%
  - cmd: conda create -n syncplay -y  
  - cmd: activate syncplay
  - cmd: conda install python pywin32 pyqt -y
  - cmd: pip install twisted py2exe_py2 zope.interface
  - cmd: type nul > C:\Miniconda\envs\syncplay\lib\site-packages\zope\__init__.py
  - cmd: pip freeze
  - cmd: conda list
  
install:
  - cmd: cd c:\projects\syncplay
  - cmd: python buildPy2exe.py
  - cmd: del C:\projects\syncplay\syncplay_v1.5.0\lib\api-*
  - cmd: del C:\projects\syncplay\syncplay_v1.5.0\lib\DNSAPI.dll
  - cmd: del C:\projects\syncplay\syncplay_v1.5.0\lib\IPHLPAPI.dll
  - cmd: del C:\projects\syncplay\syncplay_v1.5.0\lib\MPR.dll
  - cmd: mkdir C:\projects\syncplay\syncplay_v1.5.0\platforms
  - cmd: copy C:\Miniconda\envs\syncplay\library\plugins\platforms\qwindows.dll C:\projects\syncplay\syncplay_v1.5.0\platforms\

# Not a project with an msbuild file, build done at install.
build: off 

artifacts:
  path: 'syncplay_v1.5.0'
  type: zip
  name: Syncplay_win_pyqt5

# Push artefact to S3 bucket and list all
before_deploy:
  - cmd: python -c "from PyQt5 import QtCore; print QtCore.QLibraryInfo.location(QtCore.QLibraryInfo.PluginsPath)"

# Deploy build to Amazon S3 bucket
deploy:
  provider: S3
  access_key_id: AKIAJS554GLAZJ5L6TUA
  secret_access_key:
    secure: ZPxgm95K1SIqcFlqwoMWmGpPfctamQhhAedoyCT4RDQM/+VbdFLfEfUtu3rZZeBm
  bucket: syncplay
  region: eu-central-1
  set_public: true
