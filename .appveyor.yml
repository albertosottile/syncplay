environment:
  MINICONDA: "C:\\Miniconda"

platform: x86

configuration: Release

init:
  - set PATH=C:\Miniconda;C:\Miniconda\Scripts;C:\Program Files (x86)\NSIS;%PATH%
  - conda create -n syncplay -y  
  - activate syncplay
  - conda install python pywin32 pyqt -y
  - pip install twisted py2exe_py2 zope.interface
  - type nul > C:\Miniconda\envs\syncplay\lib\site-packages\zope\__init__.py
  - pip freeze
  - conda list
  
install:
  - cd %APPVEYOR_BUILD_FOLDER%
  - for /F "tokens=2 delims='" %%a in ('findstr version syncplay\__init__.py') do @set ver=%%a
  - python buildPy2exe.py
  - del syncplay_v%ver%\lib\api-*
  - del syncplay_v%ver%\lib\DNSAPI.dll
  - del syncplay_v%ver%\lib\IPHLPAPI.dll
  - del syncplay_v%ver%\lib\MPR.dll
  - mkdir syncplay_v%ver%\platforms
  - copy C:\Miniconda\envs\syncplay\library\plugins\platforms\qwindows.dll syncplay_v%ver%\platforms\

# Not a project with an msbuild file, build done at install.
build: off 

after_build:
  - copy Syncplay-$(ver)-Setup.exe Syncplay-$(ver)-Setup-PyQt5.exe

artifacts:
  - path: 'syncplay_v$(ver)'
    type: zip
    name: Syncplay-$(ver)-win-pyqt5

  - path: Syncplay-$(ver)-Setup-PyQt5.exe
    name: Syncplay-$(ver)-win-setup-pyqt5
    
before_deploy:
  - cmd: python -c "from PyQt5 import QtCore; print QtCore.QLibraryInfo.location(QtCore.QLibraryInfo.PluginsPath)"

# Deploy build to BinTray
deploy:
  provider: BinTray
  username: alby128
  api_key:
    secure: lAocj5KA9Z9x4BefQBIgNlQJbeW4qPBfCgYVBHMyOP3NgyhnMLmvR57ZCqtCKBlQ
  subject: alby128
  repo: Syncplay
  package: Syncplay
  version: "test"
  publish: true
  override: true
  